{"version":3,"sources":["components/Contexts/Score.js","components/Hooks/Hooks.js","components/Contexts/Resource.js","components/Theme/Theme.js","components/Theme/index.js","components/UI/Page/Page.js","components/UI/Page/Header/Header.js","components/UI/Page/Body/Body.js","components/UI/Page/index.js","constants/players.js","utils/index.js","components/UI/Select/index.js","components/UI/Select/Select.js","components/UI/Button/Button.js","components/UI/Button/index.js","pages/Home/index.js","pages/Home/Home.js","constants/resources.js","constants/routes.js","components/UI/Link/index.js","components/UI/Link/Link.js","components/UI/Caption/index.js","components/UI/Caption/Caption.js","components/UI/Card/Card.js","components/UI/Card/index.js","axios/index.js","constants/api.js","components/Fetcher/index.js","components/Fetcher/Fetcher.js","constants/attributes.js","components/Game/Game.js","components/Game/index.js","pages/Battle/index.js","pages/Battle/Battle.js","App.js","constants/score.js","serviceWorker.js","index.js"],"names":["Component","useSessionState","key","initialValue","useState","window","sessionStorage","getItem","value","setValue","useEffect","setItem","ResourceContext","createContext","withResourceConsumer","props","useContext","resource","setResource","resourceContext","ScoreContext","color","Theme","createMuiTheme","typography","h1","fontFamily","fontSize","letterSpacing","lineHeight","paddingTop","paddingBottom","h2","caption","overrides","MuiFormLabel","root","MuiInput","underline","borderBottom","MuiFormControl","marginBottom","MuiInputBase","MuiSelect","icon","MuiCard","width","height","marginLeft","marginRight","dispay","justifyContent","MuiCardHeader","flexDirection","avatar","content","textAlign","title","MuiCardContent","MuiSnackbarContent","backgroundColor","MuiTableCell","Page","children","Container","maxWidth","Box","display","PageHeader","home","addition","Typography","variant","align","PageBody","column","flex","alignSelf","alignItems","LEFT","RIGHT","capitalizeFirstLetter","string","charAt","toUpperCase","slice","increaseScore","player","score","PLAYERS","Number","split","Select","label","helper","values","currentValue","setCurrentValue","FormControl","InputLabel","id","trim","capitalize","labelId","onChange","e","target","map","i","MenuItem","FormHelperText","StyledButton","withStyles","borderColor","Button","Home","component","RouterLink","to","Link","Caption","firstRowStyles","fontWeight","Card","item","attributes","Grow","in","CardHeader","Avatar","CardContent","Table","padding","TableBody","attribute","TableRow","TableCell","style","axios","create","baseURL","Fetcher","data","setData","loading","setLoading","error","setError","url","a","get","results","toString","fetchData","PEOPLE_ATTRIBUTES","STARSHIPS_ATTRIBUTES","initialBoard","initialItem","Game","withFetcher","setScore","board","setBoard","winner","setWinner","Object","every","Boolean","ATTRIBUTES","handleButtonClick","array","selectedItem","Math","floor","random","length","name","onClick","Snackbar","open","message","action","size","Battle","scoreContext","withScoreProvider","Provider","withResourceProvider","ThemeProvider","theme","CssBaseline","basename","exact","path","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.041614fa.chunk.js","sourcesContent":["import React, { createContext, useContext } from 'react'\n\nimport { useSessionState } from '../Hooks'\n\nimport SCORE from '../../constants/score'\n\nconst ScoreContext = createContext()\n\nconst withScoreProvider = Component => props => {\n  const [score, setScore] = useSessionState(['score', SCORE])\n\n  return (\n    <ScoreContext.Provider value={[score, setScore]}>\n      <Component {...props} />\n    </ScoreContext.Provider>\n  )\n}\n\nconst withScoreConsumer = Component => props => {\n  const [score, setScore] = useContext(ScoreContext)\n\n  return <Component {...props} scoreContext={[score, setScore]} />\n}\n\nexport { ScoreContext, withScoreProvider, withScoreConsumer }\n","import { useState, useEffect } from 'react'\n\nconst useSessionState = ([key, initialValue]) => {\n  const [value, setValue] = useState(window.sessionStorage.getItem(key) || initialValue)\n\n  useEffect(() => {\n    const setItem = () => {\n      window.sessionStorage.setItem(key, value)\n    }\n    setItem()\n  }, [key, value])\n\n  return [value, setValue]\n}\n\nexport { useSessionState }\n","import React, { createContext, useContext } from 'react'\n\nimport { useSessionState } from '../Hooks'\n\nimport * as RESOURCES from '../../constants/resources'\n\nconst ResourceContext = createContext()\n\nconst withResourceProvider = Component => props => {\n  const [resource, setResource] = useSessionState(['resource', RESOURCES.PEOPLE])\n\n  return (\n    <ResourceContext.Provider value={[resource, setResource]}>\n      <Component {...props} />\n    </ResourceContext.Provider>\n  )\n}\n\nconst withResourceConsumer = Component => props => {\n  const [resource, setResource] = useContext(ResourceContext)\n\n  return <Component {...props} resourceContext={[resource, setResource]} />\n}\n\nexport { ResourceContext, withResourceProvider, withResourceConsumer }\n","import { createMuiTheme } from '@material-ui/core/styles'\n\nconst color = '#FAFAFA'\n\nconst theme = createMuiTheme({\n  typography: {\n    h1: {\n      color: color,\n      fontFamily: '\"Press Start 2P\"',\n      fontSize: '2.75rem',\n      letterSpacing: '.75rem',\n      lineHeight: 1.5,\n      paddingTop: '4rem',\n      paddingBottom: '4rem'\n    },\n    h2: {\n      color: color,\n      fontFamily: '\"Press Start 2P\"',\n      fontSize: '1rem',\n      letterSpacing: '0rem',\n      lineHeight: 1.5,\n      paddingTop: '2rem',\n      paddingBottom: '2rem'\n    },\n    caption: {\n      color: color,\n      fontSize: '.825rem'\n    }\n  },\n  overrides: {\n    MuiFormLabel: {\n      root: {\n        color: color,\n        '&$focused': {\n          color: color\n        }\n      }\n    },\n    MuiInput: {\n      underline: {\n        '&:before': {\n          borderBottom: '1px solid #fafafa'\n        },\n        '&:after': {\n          borderBottom: '2px solid #fafafa'\n        },\n        '&:hover:not($disabled):not($focused):not($error):before': {\n          borderBottom: '2px solid #fafafa'\n        }\n      }\n    },\n    MuiFormControl: {\n      root: {\n        marginBottom: '40px'\n      }\n    },\n    MuiInputBase: {\n      root: {\n        color: color\n      }\n    },\n    MuiSelect: {\n      icon: {\n        color: color\n      }\n    },\n    MuiCard: {\n      root: {\n        width: '140px',\n        height: '240px',\n        marginLeft: '2vw',\n        marginRight: '2vw',\n        dispay: 'flex',\n        justifyContent: 'space-between'\n      }\n    },\n    MuiCardHeader: {\n      root: {\n        flexDirection: 'column',\n        paddingBottom: '8px'\n      },\n      avatar: {\n        marginRight: 0,\n        marginBottom: '.5rem'\n      },\n      content: {\n        textAlign: 'center'\n      },\n      title: {\n        height: '40px'\n      }\n    },\n    MuiCardContent: {\n      root: {\n        paddingTop: '8px'\n      }\n    },\n    MuiSnackbarContent: {\n      root: {\n        color: 'rgba(0, 0, 0, 0.87)',\n        backgroundColor: color\n      }\n    },\n    MuiTableCell: {\n      root: {\n        fontSize: '.7rem'\n      }\n    }\n  }\n})\n\nexport { color }\n\nexport default theme\n","import Theme, { color } from './Theme'\n\nexport { color }\nexport default Theme\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Container, Box } from '@material-ui/core'\n\nconst Page = ({ children }) => (\n  <Container maxWidth='sm'>\n    <Box display='flex' flexDirection='column' height='100vh'>\n      {children}\n    </Box>\n  </Container>\n)\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired\n}\n\nexport default Page\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Typography, Box } from '@material-ui/core'\n\nconst PageHeader = ({ children, home, addition }) => (\n  <Box display='flex' justifyContent='space-between'>\n    <Typography variant={home ? 'h1' : 'h2'} align={home ? 'center' : 'left'}>{children}</Typography>\n    {addition && <Typography variant='h2'>{addition}</Typography>}\n  </Box>\n)\n\nPageHeader.propTypes = {\n  children: PropTypes.node.isRequired,\n  home: PropTypes.bool,\n  addition: PropTypes.string\n}\n\nexport default PageHeader\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Box } from '@material-ui/core'\n\nconst PageBody = ({ children, column }) => (\n  <Box\n    flex={1}\n    alignSelf='center'\n    display='flex'\n    alignItems='center'\n    flexDirection={column && 'column'}\n    justifyContent={column && 'center'}\n  >\n    {children}\n  </Box>\n)\n\nPageBody.propTypes = {\n  children: PropTypes.node.isRequired,\n  column: PropTypes.bool\n}\n\nexport default PageBody\n","import Page from './Page'\n\nimport Header from './Header/Header'\nimport Body from './Body/Body'\n\nexport { Header as PageHeader, Body as PageBody }\n\nexport default Page\n","export const LEFT = 'left'\nexport const RIGHT = 'right'\n","import * as PLAYERS from '../constants/players'\n\nconst capitalizeFirstLetter = string => string.charAt(0).toUpperCase() + string.slice(1)\n\nconst randomItemFromArray = array => array[Math.floor(Math.random() * array.length)]\n\nconst getFirstChar = string => string.charAt(0)\n\nconst increaseScore = player => score => {\n  if (player === PLAYERS.LEFT) return `${Number(score.split('-')[0]) + 1}-${Number(score.split('-')[1])}`\n  if (player === PLAYERS.RIGHT) return `${Number(score.split('-')[0])}-${Number(score.split('-')[1]) + 1}`\n\n  return score\n}\n\nexport {\n  capitalizeFirstLetter as capitalize,\n  randomItemFromArray as randomItem,\n  getFirstChar,\n  increaseScore\n}\n","import Select from './Select'\n\nexport default Select\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { FormControl, InputLabel, Select, MenuItem, FormHelperText } from '@material-ui/core'\n\nimport { capitalize } from '../../../utils'\n\nconst StellarSelect = ({ label, helper, values, currentValue, setCurrentValue }) => (\n  <FormControl>\n    <InputLabel id={`select-${label.trim()}-label`}>{capitalize(label)}</InputLabel>\n    <Select\n      labelId={`select-${label.trim()}-label`}\n      id={`select-${label.trim()}`}\n      value={currentValue}\n      onChange={e => setCurrentValue(e.target.value)}\n    >\n      {values.map((value, i) => <MenuItem key={i} value={value}>{capitalize(value)}</MenuItem>)}\n    </Select>\n    {helper && <FormHelperText>{capitalize(helper)}</FormHelperText>}\n  </FormControl>\n)\n\nStellarSelect.propTypes = {\n  label: PropTypes.string.isRequired,\n  helper: PropTypes.string,\n  values: PropTypes.arrayOf(PropTypes.string).isRequired,\n  currentValue: PropTypes.string.isRequired,\n  setCurrentValue: PropTypes.func.isRequired\n}\n\nexport default StellarSelect\n","import React from 'react'\nimport { Button } from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { color } from '../../Theme'\n\nconst StyledButton = withStyles({\n  root: {\n    color: color,\n    borderColor: color,\n    marginLeft: '6px',\n    marginRight: '6px'\n  }\n})(Button)\n\nconst StellarButton = ({ ...props }) => <StyledButton variant='outlined' {...props} />\n\nexport default StellarButton\n","import Button from './Button'\n\nexport default Button\n","import Home from './Home'\n\nexport default Home\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link as RouterLink } from 'react-router-dom'\n\nimport Page, { PageHeader, PageBody } from '../../components/UI/Page'\nimport Select from '../../components/UI/Select'\nimport Button from '../../components/UI/Button'\n\nimport { withResourceConsumer } from '../../components/Contexts'\n\nimport * as RESOURCES from '../../constants/resources'\nimport * as ROUTES from '../../constants/routes'\n\nconst Home = ({ resourceContext: [resource, setResource] }) => (\n  <Page>\n    <PageHeader home>\n      the space game\n    </PageHeader>\n    <PageBody column>\n      <Select\n        label='resource'\n        helper='select which resource to play against'\n        values={[RESOURCES.PEOPLE, RESOURCES.STARSHIPS]}\n        currentValue={resource}\n        setCurrentValue={setResource}\n      />\n      <Button component={RouterLink} to={ROUTES.BATTLE}>\n        START GAME\n      </Button>\n    </PageBody>\n  </Page>\n)\n\nHome.propTypes = {\n  resourceContext: PropTypes.array.isRequired\n}\n\nexport default withResourceConsumer(Home)\n","export const PEOPLE = 'people'\nexport const STARSHIPS = 'starships'\n","export const HOME = '/'\nexport const BATTLE = '/battle'\n","import Link from './Link'\n\nexport default Link\n","import { Link } from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { color } from '../../Theme'\n\nconst StyledLink = withStyles({\n  root: {\n    color: color\n  }\n})(Link)\n\nexport default StyledLink\n","import Caption from './Caption'\n\nexport default Caption\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Typography } from '@material-ui/core'\n\nconst Caption = ({ title = 'Loading ...' }) => (\n  <Typography variant='caption'>{title}</Typography>\n)\n\nCaption.propTypes = {\n  title: PropTypes.string\n}\n\nexport default Caption\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Grow, Card, CardContent, Avatar, Table, TableBody, TableRow, TableCell, CardHeader } from '@material-ui/core'\n\nimport { capitalize, getFirstChar } from '../../../utils'\n\nconst firstRowStyles = { fontWeight: 'bold', fontSize: '.85rem' }\n\nconst StellarCard = ({ title, item, attributes }) => (\n  <Grow in>\n    <Card>\n      <CardHeader avatar={<Avatar>{getFirstChar(title)}</Avatar>} title={title} />\n      <CardContent>\n        <Table padding='none'>\n          <TableBody>\n            {attributes.map((attribute, i) => (\n              <TableRow key={i}>\n                <TableCell style={!i ? firstRowStyles : {}}>{capitalize(attribute)}</TableCell>\n                <TableCell style={!i ? firstRowStyles : {}} align='right'>{item[attribute]}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </CardContent>\n    </Card>\n  </Grow>\n)\n\nStellarCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  item: PropTypes.object.isRequired,\n  attributes: PropTypes.array.isRequired\n}\n\nexport default StellarCard\n","import Card from './Card'\n\nexport default Card\n","import axios from 'axios'\n\nimport * as API from '../constants/api'\n\nexport default axios.create({\n  baseURL: API.ROOT\n})\n","export const ROOT = 'https://swapi.co/api/'\n","import Fetcher from './Fetcher'\n\nexport default Fetcher\n","import React, { useState, useEffect } from 'react'\n\nimport axios from '../../axios'\n\nconst withFetcher = Component => props => {\n  const [data, setData] = useState(null)\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(null)\n\n  useEffect(() => {\n    const fetchData = async url => {\n      setLoading(true)\n\n      try {\n        const results = await axios.get(url)\n\n        setData(results.data.results)\n      } catch (error) {\n        setError(error.toString())\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    fetchData(props.url)\n  }, [props.url])\n\n  return <Component {...props} data={data} loading={loading} error={error} />\n}\n\nexport default withFetcher\n","export const PEOPLE_ATTRIBUTES = ['mass', 'height', 'gender']\nexport const STARSHIPS_ATTRIBUTES = ['crew', 'passengers', 'length']\n","import React, { useState, Fragment } from 'react'\nimport { Button as MuiButton, Snackbar } from '@material-ui/core'\n\nimport Caption from '../UI/Caption'\nimport Card from '../UI/Card'\nimport Button from '../UI/Button'\n\nimport withFetcher from '../Fetcher'\n\nimport { randomItem, increaseScore } from '../../utils'\n\nimport * as ATTRIBUTES from '../../constants/attributes'\nimport * as PLAYERS from '../../constants/players'\nimport * as RESOURCES from '../../constants/resources'\n\nconst initialBoard = {\n  [PLAYERS.LEFT]: null,\n  [PLAYERS.RIGHT]: null\n}\n\nconst initialItem = {\n  [PLAYERS.LEFT]: null,\n  [PLAYERS.RIGHT]: null\n}\n\nconst initialWinner = null\n\nconst Game = ({ data, loading, error, url, score, setScore }) => {\n  const [board, setBoard] = useState(initialBoard)\n  const [item, setItem] = useState(initialItem)\n  const [winner, setWinner] = useState(initialWinner)\n\n  if (Object.values(board).every(Boolean)) {\n    if (board[PLAYERS.LEFT] > board[PLAYERS.RIGHT]) {\n      setWinner(PLAYERS.LEFT)\n      setScore(increaseScore(PLAYERS.LEFT)(score))\n    } else if (board[PLAYERS.LEFT] < board[PLAYERS.RIGHT]) {\n      setWinner(PLAYERS.RIGHT)\n      setScore(increaseScore(PLAYERS.RIGHT)(score))\n    } else {\n      setWinner('both')\n    }\n    setBoard(initialBoard)\n  }\n\n  const attributes = url === RESOURCES.PEOPLE\n    ? ATTRIBUTES.PEOPLE_ATTRIBUTES : ATTRIBUTES.STARSHIPS_ATTRIBUTES\n\n  const handleButtonClick = player => {\n    const selectedItem = randomItem(data)\n    setItem({ ...item, [player]: selectedItem })\n    setBoard({ ...board, [player]: Number(selectedItem[attributes[0]]) })\n  }\n\n  const handleSnackbarClick = () => {\n    setWinner(initialWinner)\n    setItem(initialItem)\n  }\n\n  return (\n    <>\n      {error && <Caption title={error} />}\n      {loading && <Caption title='Loading ...' />}\n      {data && [PLAYERS.LEFT, PLAYERS.RIGHT].map((player, i) => (\n        <Fragment key={i}>\n          {item[player] ? (\n            <Card title={item[player].name} item={item[player]} attributes={attributes} />\n          ) : (\n            <Button onClick={() => handleButtonClick(player)}>DRAW THE CARD</Button>\n          )}\n        </Fragment>\n      ))}\n      <Snackbar\n        open={Boolean(winner)}\n        message={winner === PLAYERS.RIGHT || winner === PLAYERS.LEFT ? `Player ${winner} wins!` : 'Draw!'}\n        action={<MuiButton size='small' onClick={handleSnackbarClick}>PLAY AGAIN</MuiButton>}\n      />\n    </>\n  )\n}\n\nexport default withFetcher(Game)\n","import Game from './Game'\n\nexport default Game\n","import Battle from './Battle'\n\nexport default Battle\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link as RouterLink } from 'react-router-dom'\n\nimport Page, { PageHeader, PageBody } from '../../components/UI/Page'\nimport Link from '../../components/UI/Link'\nimport Game from '../../components/Game'\n\nimport { withResourceConsumer, withScoreConsumer } from '../../components/Contexts'\n\nimport * as ROUTES from '../../constants/routes'\n\nconst Battle = ({ resourceContext: [resource], scoreContext: [score, setScore] }) => (\n  <Page>\n    <PageHeader addition={score}>\n      <Link component={RouterLink} to={ROUTES.HOME}>\n        the space game\n      </Link>\n    </PageHeader>\n    <PageBody>\n      <Game url={resource} score={score} setScore={setScore} />\n    </PageBody>\n  </Page>\n)\n\nBattle.propTypes = {\n  resourceContext: PropTypes.array.isRequired,\n  scoreContext: PropTypes.array.isRequired\n}\n\nexport default withScoreConsumer(withResourceConsumer(Battle))\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { ThemeProvider } from '@material-ui/styles'\n\nimport { withResourceProvider, withScoreProvider } from './components/Contexts'\nimport theme from './components/Theme'\n\nimport Home from './pages/Home'\nimport Battle from './pages/Battle'\n\nimport * as ROUTES from './constants/routes'\n\nconst App = () => (\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <Router basename='/the-space-game'>\n      <Switch>\n        <Route exact path={ROUTES.HOME} component={Home} />\n        <Route path={ROUTES.BATTLE} component={Battle} />\n        <Redirect to={ROUTES.HOME} />\n      </Switch>\n    </Router>\n  </ThemeProvider>\n)\n\nexport default withScoreProvider(withResourceProvider(App))\n","const SCORE = '0-0'\n\nexport default SCORE\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  window.fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport './styles/index.sass'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}